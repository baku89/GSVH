var API_KEY, DIST_BETWEEN_PTS, MAX_PTS, canvas, create, dirService, loader, onMessage, onPanoramaLoad, panoIds, rawPts, res, settings, tasks, totalDist, updateSettings;

MAX_PTS = 100;

DIST_BETWEEN_PTS = 5;

API_KEY = "AIzaSyBQ2dzDfyF8Y0Dwe-Q6Jzx4_G62ANrTotQ";

loader = null;

dirService = new google.maps.DirectionsService({});

res = null;

rawPts = [];

panoIds = [];

totalDist = 0;

canvas = null;

tasks = [];

settings = {};

updateSettings = function() {
  settings.name = $('#name').val();
  settings.dir = $('#dir').val();
  settings.url = $('#url').val();
  settings.lookat = $('#lookat').val();
  settings.step = $('#step').val();
  settings.heading = $('input[name=heading]:checked').val();
  settings.lookat = $('#lookat').val();
  return settings.quality = $('#flg-proxy').prop('checked') ? 2 : 3;
};

$(function() {
  canvas = $('#panorama')[0];
  $('#create').on('click', create);
  GSVHyperlapse.onMessage = onMessage;
  return GSVHyperlapse.onPanoramaLoad = onPanoramaLoad;
});

create = function() {
  var hyperlapse, index;
  updateSettings();
  index = tasks.length;
  $('.tasks').append("<li id='task-" + index + "'> <h1>" + settings.name + "</h1> <button class='action' data-index='" + index + "'>Cancel</button> <p>requesting route..<br></p> <progress max='1' value='0'>ダウンロード中</progress> </li>");
  hyperlapse = new GSVHyperlapse(settings);
  hyperlapse.create();
  $("#task-" + index + " button").on('click', function() {
    var $elm;
    $elm = $(this);
    index = $elm.attr('data-index');
    tasks[index].bCancel = true;
    return $elm.next().append('canceled');
  });
  return tasks.push(hyperlapse);
};

onMessage = function(message) {
  var $elm, index;
  index = tasks.indexOf(this);
  $elm = $("#task-" + index);
  return $elm.children('p').append(message + "<br>");
};

onPanoramaLoad = function(canvas, loaded, total) {
  var $elm, index, params, self;
  index = tasks.indexOf(this);
  $elm = $("#task-" + index);
  $elm.children("progress").attr({
    value: loaded,
    max: total,
    'data-label': "[" + loaded + "/" + total + "]"
  });
  $elm.append(canvas);
  params = {
    name: this.name,
    directory: settings.dir,
    number: this.numPanorama,
    image: canvas.toDataURL('image/png')
  };
  console.log(params.image);
  self = this;
  return $.ajax({
    type: "POST",
    url: './save.php',
    data: params,
    success: function(json) {
      var result;
      result = $.parseJSON(json);
      if (result.status !== "success") {
        self.bCancel = true;
        return $elm.children('p').append("an error occured" + "<br>");
      }
    }
  });
};

//# sourceMappingURL=data:application/json;base64,