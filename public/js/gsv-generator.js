var API_KEY, DIST_BETWEEN_PTS, MAX_PTS, VERSION, canvas, create, dirService, loader, onAnalyzeComplete, onCancel, onMessage, onPanoramaLoad, onProgress, panoIds, rawPts, res, restoreSettings, settings, storage, tasks, totalDist, updateSettings;

MAX_PTS = 100;

DIST_BETWEEN_PTS = 5;

API_KEY = "AIzaSyBQ2dzDfyF8Y0Dwe-Q6Jzx4_G62ANrTotQ";

VERSION = '0.1';

loader = null;

dirService = new google.maps.DirectionsService({});

res = null;

rawPts = [];

panoIds = [];

totalDist = 0;

canvas = null;

tasks = [];

settings = {};

storage = localStorage;

restoreSettings = function() {
  var $elm;
  $elm = $('nav');
  if (storage.version === VERSION) {
    $('#name').val(storage.name);
    $('#dir').val(storage.dir);
    $('#url').val(storage.url);
    $("input[value=" + storage.travelMode + "]").prop('checked', true);
    $("input[value=" + storage.heading + "]").prop('checked', true);
    $('#lookat').val(storage.lookat);
    $('#zoom').val(storage.zoom);
    $('#step').val(storage.step);
    $('#search-radius').val(storage.searchRadius);
  }
  return $elm.find('input[data-onchecked], textarea[data-onchecked]').each(function() {
    var $parent, $this, name;
    $this = $(this);
    console.log($this);
    $parent = $($this.attr('data-onchecked'));
    name = $parent.attr('name');
    return $("[name=" + name).on('change', function() {
      console.log($parent.prop('checked'));
      return $this.prop('disabled', !$parent.prop('checked'));
    });
  });
};

updateSettings = function() {
  settings.name = $('#name').val();
  settings.dir = $('#dir').val();
  settings.url = $('#url').val();
  settings.travelMode = $('input[name=travel]:checked').val();
  settings.heading = $('input[name=heading]:checked').val();
  settings.lookat = $('#lookat').val();
  settings.zoom = $('#zoom').val();
  settings.step = $('#step').val();
  settings.searchRadius = $('#search-radius').val();
  settings.version = VERSION;
  return $.extend(storage, settings);
};

$(function() {
  canvas = $('#panorama')[0];
  $('#create').on('click', create);
  GSVHyperlapse.onMessage = onMessage;
  GSVHyperlapse.onPanoramaLoad = onPanoramaLoad;
  GSVHyperlapse.onProgress = onProgress;
  GSVHyperlapse.onAnalyzeComplete = onAnalyzeComplete;
  GSVHyperlapse.onCancel = onCancel;
  restoreSettings();
  return $('input').on('change', updateSettings);
});

create = function() {
  var hyperlapse, index;
  updateSettings();
  index = tasks.length;
  $('.tasks').append("<li id='task-" + index + "'> <h1>" + settings.name + "</h1> <button class='action' data-index='" + index + "'>Cancel</button> <p>requesting route..<br></p> <div id='map-" + index + "' style='width: 48%; height: 0; padding-top: 26%; background:gray; display: inline-block;'></div> </li>");
  hyperlapse = new GSVHyperlapse(settings);
  hyperlapse.setMap($("#map-" + index)[0]);
  hyperlapse.create();
  $("#task-" + index + " button").on('click', function() {
    var $elm;
    $elm = $(this);
    index = $elm.attr('data-index');
    return tasks[index].cancel();
  });
  return tasks.push(hyperlapse);
};

onCancel = function() {
  var $btn, $elm, index;
  index = tasks.indexOf(this);
  $elm = $("#task-" + index);
  $btn = $('<button>delete</button><br>');
  $btn.on('click', function() {
    return $elm.remove();
  });
  return $elm.children('p').append('canceled<br>').append($btn);
};

onAnalyzeComplete = function() {
  var $btnGen, $elm, index;
  index = tasks.indexOf(this);
  $elm = $("#task-" + index);
  $btnGen = $('<button>generate hyperlapse</button><br>');
  $btnGen.on('click', function() {
    return tasks[index].compose();
  });
  return $elm.children('p').append($btnGen);
};

onProgress = function(loaded, total) {
  var $elm, index;
  index = tasks.indexOf(this);
  $elm = $("#task-" + index);
  if (loaded < 1) {
    $elm.children('p').append($('<progress></progress>'));
  }
  return $elm.find("progress").last().attr({
    value: loaded,
    max: total,
    'data-label': "[" + loaded + "/" + total + "]"
  });
};

onMessage = function(message) {
  var $elm, index;
  index = tasks.indexOf(this);
  $elm = $("#task-" + index);
  return $elm.children('p').append(message + "<br>");
};

onPanoramaLoad = function(idx, canvas) {
  var $elm, index, params;
  index = tasks.indexOf(this);
  $elm = $("#task-" + index);
  $elm.append(canvas);
  params = {
    name: this.name,
    directory: settings.dir,
    number: idx,
    image: canvas.toDataURL('image/png')
  };
  return $.ajax({
    type: "POST",
    url: './save.php',
    data: params,
    success: (function(_this) {
      return function(json) {
        var result;
        result = $.parseJSON(json);
        if (result.status !== "success") {
          _this.cancel();
          return $elm.children('p').append("an error occured" + "<br>");
        }
      };
    })(this)
  });
};

//# sourceMappingURL=data:application/json;base64,