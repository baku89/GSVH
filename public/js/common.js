var API_KEY, PROXY_HEIGHT, TAG_HEIGHT, V_SCALE, err, fs, gui, mkdirp, nativeMenuBar, notifier, path, saveCanvas, win;

fs = require('fs');

path = require('path');

gui = require('nw.gui');

mkdirp = require('mkdirp');

notifier = require('node-notifier');

TAG_HEIGHT = 40.0;

API_KEY = "AIzaSyBQ2dzDfyF8Y0Dwe-Q6Jzx4_G62ANrTotQ";

PROXY_HEIGHT = 832.0;

V_SCALE = (TAG_HEIGHT + PROXY_HEIGHT) / PROXY_HEIGHT;

win = gui.Window.get();

nativeMenuBar = new gui.Menu({
  type: 'menubar'
});

try {
  nativeMenuBar.createMacBuiltin('gi-eye');
  win.menu = nativeMenuBar;
} catch (_error) {
  err = _error;
  console.log(err.message);
}

saveCanvas = function(canvas, dest) {
  var base64, dir;
  base64 = canvas.toDataURL().replace(/^data:image\/\w+;base64,/, "");
  dir = path.dirname(dest);
  return mkdirp(dir, function(err) {
    if (err) {
      return console.error(err);
    } else {
      return fs.writeFile(dest, base64, 'base64');
    }
  });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbi5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxnSEFBQTs7QUFBQSxFQUFBLEdBQU8sT0FBQSxDQUFRLElBQVIsQ0FBUCxDQUFBOztBQUFBLElBQ0EsR0FBTyxPQUFBLENBQVEsTUFBUixDQURQLENBQUE7O0FBQUEsR0FFQSxHQUFPLE9BQUEsQ0FBUSxRQUFSLENBRlAsQ0FBQTs7QUFBQSxNQUdBLEdBQVUsT0FBQSxDQUFRLFFBQVIsQ0FIVixDQUFBOztBQUFBLFFBSUEsR0FBVSxPQUFBLENBQVEsZUFBUixDQUpWLENBQUE7O0FBQUEsVUFNQSxHQUFhLElBTmIsQ0FBQTs7QUFBQSxPQVFBLEdBQVUseUNBUlYsQ0FBQTs7QUFBQSxZQVVBLEdBQWUsS0FWZixDQUFBOztBQUFBLE9BV0EsR0FBVSxDQUFDLFVBQUEsR0FBYSxZQUFkLENBQUEsR0FBOEIsWUFYeEMsQ0FBQTs7QUFBQSxHQWdCQSxHQUFNLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBWCxDQUFBLENBaEJOLENBQUE7O0FBQUEsYUFpQkEsR0FBb0IsSUFBQSxHQUFHLENBQUMsSUFBSixDQUFTO0FBQUEsRUFBQyxJQUFBLEVBQU0sU0FBUDtDQUFULENBakJwQixDQUFBOztBQW1CQTtBQUNDLEVBQUEsYUFBYSxDQUFDLGdCQUFkLENBQStCLFFBQS9CLENBQUEsQ0FBQTtBQUFBLEVBQ0EsR0FBRyxDQUFDLElBQUosR0FBVyxhQURYLENBREQ7Q0FBQSxjQUFBO0FBSUMsRUFESyxZQUNMLENBQUE7QUFBQSxFQUFBLE9BQU8sQ0FBQyxHQUFSLENBQVksR0FBRyxDQUFDLE9BQWhCLENBQUEsQ0FKRDtDQW5CQTs7QUFBQSxVQTBCQSxHQUFhLFNBQUMsTUFBRCxFQUFTLElBQVQsR0FBQTtBQUNaLE1BQUEsV0FBQTtBQUFBLEVBQUEsTUFBQSxHQUFTLE1BQU0sQ0FBQyxTQUFQLENBQUEsQ0FBa0IsQ0FBQyxPQUFuQixDQUEyQiwwQkFBM0IsRUFBdUQsRUFBdkQsQ0FBVCxDQUFBO0FBQUEsRUFFQSxHQUFBLEdBQU0sSUFBSSxDQUFDLE9BQUwsQ0FBYSxJQUFiLENBRk4sQ0FBQTtTQUlBLE1BQUEsQ0FBTyxHQUFQLEVBQVksU0FBQyxHQUFELEdBQUE7QUFDWCxJQUFBLElBQUcsR0FBSDthQUNDLE9BQU8sQ0FBQyxLQUFSLENBQWMsR0FBZCxFQUREO0tBQUEsTUFBQTthQUdDLEVBQUUsQ0FBQyxTQUFILENBQWEsSUFBYixFQUFtQixNQUFuQixFQUEyQixRQUEzQixFQUhEO0tBRFc7RUFBQSxDQUFaLEVBTFk7QUFBQSxDQTFCYixDQUFBIiwiZmlsZSI6ImNvbW1vbi5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbImZzIFx0XHQ9IHJlcXVpcmUgJ2ZzJ1xucGF0aFx0PSByZXF1aXJlICdwYXRoJ1xuZ3VpIFx0PSByZXF1aXJlICdudy5ndWknXG5ta2RpcnAgXHQ9IHJlcXVpcmUgJ21rZGlycCdcbm5vdGlmaWVyPSByZXF1aXJlICdub2RlLW5vdGlmaWVyJ1xuXG5UQUdfSEVJR0hUID0gNDAuMFxuXG5BUElfS0VZID0gXCJBSXphU3lCUTJkekRmeUY4WTBEd2UtUTZKeng0X0c2MkFOclRvdFFcIlxuXG5QUk9YWV9IRUlHSFQgPSA4MzIuMFxuVl9TQ0FMRSA9IChUQUdfSEVJR0hUICsgUFJPWFlfSEVJR0hUKSAvIFBST1hZX0hFSUdIVFxuXG4jLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4jIHdpbmRvdyBzZXR1cFxuXG53aW4gPSBndWkuV2luZG93LmdldCgpXG5uYXRpdmVNZW51QmFyID0gbmV3IGd1aS5NZW51KHt0eXBlOiAnbWVudWJhcid9KVxuXG50cnlcblx0bmF0aXZlTWVudUJhci5jcmVhdGVNYWNCdWlsdGluKCdnaS1leWUnKVxuXHR3aW4ubWVudSA9IG5hdGl2ZU1lbnVCYXJcbmNhdGNoIGVyclxuXHRjb25zb2xlLmxvZyBlcnIubWVzc2FnZVxuXG4jLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5zYXZlQ2FudmFzID0gKGNhbnZhcywgZGVzdCkgLT5cblx0YmFzZTY0ID0gY2FudmFzLnRvRGF0YVVSTCgpLnJlcGxhY2UoL15kYXRhOmltYWdlXFwvXFx3KztiYXNlNjQsLywgXCJcIilcblxuXHRkaXIgPSBwYXRoLmRpcm5hbWUoZGVzdClcblxuXHRta2RpcnAgZGlyLCAoZXJyKSAtPlxuXHRcdGlmIGVyclxuXHRcdFx0Y29uc29sZS5lcnJvciBlcnJcblx0XHRlbHNlXG5cdFx0XHRmcy53cml0ZUZpbGUoZGVzdCwgYmFzZTY0LCAnYmFzZTY0JykiXX0=